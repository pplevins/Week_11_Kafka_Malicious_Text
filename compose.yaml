services:
  retriever:
    build:
      context: .
      dockerfile: app/services/retriever/Dockerfile
    environment:
      MONGODB_URL: mongodb+srv://IRGC_NEW:iran135@cluster0.6ycjkak.mongodb.net/
      MONGODB_DATABASE: IranMalDB
    depends_on:
      - kafka
    restart: unless-stopped

  preprocessor:
    build:
      context: .
      dockerfile: app/services/preprocessor/Dockerfile
    depends_on:
      - kafka
    restart: unless-stopped

  enricher:
    build:
      context: .
      dockerfile: app/services/enricher/Dockerfile
    depends_on:
      - kafka
    restart: unless-stopped

  persister:
    build:
      context: .
      dockerfile: app/services/persister/Dockerfile
    depends_on:
      - kafka
    restart: unless-stopped

  data-retrieval:
    build:
      context: .
      dockerfile: app/services/data_retrieval/Dockerfile
    environment:
      MONGODB_URL: mongodb://root:example@mongo-db:27017/
      MONGODB_DATABASE: tweets
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - mongo-db
    restart: unless-stopped

  kafka:
    image: apache/kafka
    ports:
      - "9092:9092"
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mongo-db:
    image: mongo:6.0
    container_name: mongo-db
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

volumes:
  mongo-data:
    driver: local